{"version":3,"sources":["components/Chart.js","components/NetworkGraph.js","components/Scale.js","components/ContributionList.js","App.js","serviceWorker.js","index.js"],"names":["d3","require","Chart","props","svgRef","React","useRef","contentRef","useEffect","svg","select","current","contentElement","zoomtool","call","zoom","extent","width","height","scaleExtent","on","attr","event","transform","viewbox","id","chartId","viewBox","ref","children","NetworkGraph","graph","data","centerX","centerY","ring1PhaseShift","Math","PI","nodes","length","ring2PhaseShift","chartRef","tooltipRef","useState","setTooltipTitle","setTooltipBody","getRadiusX","d","votesCount","sqrt","getRadiusY","getFontSize","max","name","getColor","colors","getNodeX","selected","radius","cos","getNodeY","sin","nodeWraps","selectAll","enter","append","classed","root","allNodes","style","html","selColor","selSubFontSize","min","radiusX","radiusY","e","transition","duration","ring1Nodes","filter","remove","raise","selKeyWords","keywords","parentRadiusX","getNode2X","parentRadiusY","getNode2Y","f","onClick","votesCountOk","clientX","clientY","className","Scale","circlesCfg","i","r","filled","quantiles","score","circles","map","cx","cy","key","stroke","color","fill","ContributionItem","bodyRef","expanded","setExpanded","command","setCommand","showExpand","setShowExpand","setTimeout","body","scrollHeight","clientHeight","dynStyle","borderColor","contrib","contribution_versions_title","contribution_versions_bodyText","contributions_votesCountOk","contributions_votesCount","ContributionList","contributionListRef","contributionSummary","undefined","contributions","c","topic_id","colorPalette","title","topic","keyword","scrollTo","createBrowserHistory","basename","process","App","loaded","setLoaded","filterTitle","setFilterTitle","selectedContributions","setSelectedContributions","selectionId","setSelectionId","selectTopic","topic_title","keyword_id","console","log","filePath","axios","get","then","result","catch","error","getTopicContributions","graphData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a8faad2d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nvar d3 = require(\"d3\")\n\nconst Chart = (props) => {\n\n  const svgRef = React.useRef('')\n  const contentRef = React.useRef('')\n\n  React.useEffect(\n    () => {\n\n      const svg = d3.select(svgRef.current)\n      const contentElement = d3.select(contentRef.current)\n\n      // Zoom & pan\n      if (props.zoomtool) {\n        svg.call(d3.zoom()\n          .extent([[0, 0], [props.width, props.height]])\n          .scaleExtent([1, 2])\n          .on(\"zoom\", zoomed));\n      }\n\n      function zoomed() {\n        contentElement.attr(\"transform\", d3.event.transform);\n      }\n    })\n\n  const viewbox = \"0 0 \" + props.width + \" \" + props.height\n\n  return <div>\n    <svg id={props.chartId} viewBox={viewbox} ref={svgRef}>\n      <g ref={contentRef}>\n        {props.children}\n      </g>\n    </svg>\n  </div>\n  // width={props.width} height={props.height} \n}\n\nChart.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  chartId: PropTypes.string\n}\n\nexport default Chart","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Tooltip from './Tooltip'\n\nconst d3 = require(\"d3\")\n\nconst NetworkGraph = (props) => {\n\n  const graph = props.data\n\n  const centerX = props.width / 2, centerY = props.height / 2\n\n  // Ring 1 : main topics\n  const ring1Radius = 250, ring1RadiusDeltaSel = 60;\n  const ring1PhaseShift = 2 * Math.PI / (graph.nodes.length);\n\n  // Ring 2 : keywords\n  const subNodeRadiusX = 40, subNodeRadiusY = 20;\n  const ring2PhaseShift = 2 * Math.PI / 8; // 8 keywords by design\n\n  const defaultRadiusX = 60, defaultRadiusY = 50;\n  // Default font size [px]\n  const defaultFontSize = 14;\n\n  // Transition duration\n  const transitionDurationMs = 2000\n\n  // References to DOM elements\n  const chartRef = React.useRef('')\n  const tooltipRef = React.useRef('')\n  const [tooltipTitle, setTooltipTitle] = React.useState('')\n  const [tooltipBody, setTooltipBody] = React.useState('')\n\n  function getRadiusX(d) {\n    if (d.id === 'root') return 120;\n    return (d.votesCount) ? (2.6e-1 * Math.sqrt(d.votesCount)) : defaultRadiusX;\n  }\n\n  function getRadiusY(d) {\n    if (d.id === 'root') return 100;\n    return (d.votesCount) ? (2.2e-1 * Math.sqrt(d.votesCount)) : defaultRadiusY;\n  }\n\n  function getFontSize(d) {\n    if (d.id === 'root') return 36;\n    return ((d.votesCount) ? (3.5e-1 * Math.sqrt(d.votesCount / Math.max(30, d.name.length))) : defaultFontSize);\n  }\n\n  function getColor(d) {\n    if (d.id === 'root')\n      return '#fafafe'\n    return props.colors[d.id % props.colors.length]\n  }\n\n  function getNodeX(d, selected = false) {\n    if (d.id === 'root') return centerX\n    const radius = ring1Radius + ((selected === true) ? ring1RadiusDeltaSel : 0)\n    return centerX + radius * Math.cos(ring1PhaseShift * d.id)\n  }\n\n  function getNodeY(d, selected = false) {\n    if (d.id === 'root') return centerY\n    const radius = ring1Radius + ((selected === true) ? ring1RadiusDeltaSel : 0)\n    return centerY + radius * Math.sin(ring1PhaseShift * d.id)\n  }\n\n  function getNode2X(d, parentRadiusX) {\n    // Position nodes as function of id (increasing from 0 to 8)\n    // Add alternate offset ring1RadiusDelta\n    return (parentRadiusX + subNodeRadiusX) * Math.cos(ring2PhaseShift * d.id)\n  }\n\n  function getNode2Y(d, parentRadiusY) {\n    return (parentRadiusY + subNodeRadiusY) * Math.sin(ring2PhaseShift * d.id)\n  }\n\n\n  // useEffect allow for d3 to interact with the DOM outside of React\n  React.useEffect(\n    () => {\n\n      // Hide tooltip\n      d3.select(tooltipRef.current)\n        .attr(\"opacity\", 0)\n\n      // Node Wraps\n      const nodeWraps = d3.select(chartRef.current)\n        .selectAll(\".ring1\")\n        .data(graph.nodes)\n        .enter()\n        .append('g')\n\n      // Ring 1 Links\n      nodeWraps.append(\"line\")\n        .classed(\"link\", true)\n        .attr(\"x1\", centerX)\n        .attr(\"y1\", centerY)\n        .attr(\"x2\", getNodeX)\n        .attr(\"y2\", getNodeY)\n\n      // Ring 1 Nodes\n      nodeWraps.append('g')\n        .classed('ring1', true)\n        .attr(\"transform\", d => \"translate(\" + getNodeX(d) + \",\" + getNodeY(d) + \")\")\n        .append('g')\n        .classed('node', true)\n\n      // Root\n      nodeWraps.selectAll('.root')\n        .data(graph.root)\n        .enter()\n        .append('g')\n        .classed('node', true)\n        .classed('root', true)\n        .attr(\"transform\", \"translate(\" + centerX + \",\" + centerY + \")\")\n\n      // Reselect root + ring 1 nodes\n      const allNodes = nodeWraps.selectAll('.node')\n\n      // Shape of node\n      allNodes.append(\"ellipse\")\n        .classed('node-shape', true)\n        .attr(\"rx\", getRadiusX)\n        .attr(\"ry\", getRadiusY)\n        .style(\"fill\", getColor);\n\n      // Label of node\n      allNodes.append(\"foreignObject\")\n        .attr(\"width\", d => 2 * getRadiusX(d))\n        .attr(\"height\", d => 2 * getRadiusY(d))\n        .attr(\"x\", d => - getRadiusX(d))\n        .attr(\"y\", d => - getRadiusY(d))\n        .append(\"xhtml:div\")\n        .classed(\"label\", true)\n        .style(\"line-height\", d => (2 * getRadiusY(d)) + 'px')\n        .style(\"font-size\", d => getFontSize(d) + \"px\")\n        .html(d => '<span>' + d.name + '</span>');\n\n      //= Actions =//\n\n      allNodes.on(\"click\", d => {\n\n        const selColor = getColor(d)\n        const selSubFontSize = Math.min(Math.max(0.8 * getFontSize(d), 9), 12)\n        const radiusX = getRadiusX(d), radiusY = getRadiusY(d)\n\n        // Set selection on all nodes\n        allNodes.selectAll('ellipse')\n          .classed('selected', e => e.id === d.id)\n\n        allNodes.selectAll('.ring2 ellipse')\n          .classed('selected', false)\n\n        d3.select(chartRef.current)\n          .transition()\n          .attr(\"transform\", e => \"translate(\" + (centerX - getNodeX(d, true)) + \",\" + (centerY - getNodeY(d, true)) + \")\")\n          .duration(transitionDurationMs)\n\n        // Set positions : larger radius for selected node\n        const ring1Nodes = d3.selectAll('.ring1')\n        ring1Nodes.transition()\n          .attr(\"transform\", e => \"translate(\" + getNodeX(e, e.id === d.id) + \",\" + getNodeY(e, e.id === d.id) + \")\")\n          .duration(transitionDurationMs)\n\n        // Remove existing ring of keywords\n        ring1Nodes.filter(e => e.id !== d.id).selectAll('.ring2').remove()\n\n        // TODO FIX Raise selection\n        allNodes.filter(e => e.id === d.id).selectAll('g').raise()\n\n        // Show keyword ring on selection (Note: this is undefined)\n        const selKeyWords = ring1Nodes.filter(e => e.id === d.id).selectAll('.ring2')\n          .data(d => d.keywords)\n          .enter()\n          .append('g')\n          .classed('ring2', true)\n          .attr(\"transform\", e => \"translate(\" + getNode2X(e, radiusX) + \",\" + getNode2Y(e, radiusY) + \")\")\n\n        // Keyword node shape\n        selKeyWords.append(\"ellipse\")\n          .classed('node-shape', true)\n          .attr(\"rx\", subNodeRadiusX)\n          .attr(\"ry\", subNodeRadiusY)\n          .style(\"fill\", selColor)\n          .style(\"opacity\", 0)\n          .transition()\n          .style(\"opacity\", 1)\n          .duration(transitionDurationMs)\n\n        // Keyword node text\n        selKeyWords.append(\"foreignObject\")\n          .attr(\"width\", 2 * subNodeRadiusX)\n          .attr(\"height\", 2 * subNodeRadiusY)\n          .attr(\"x\", -subNodeRadiusX)\n          .attr(\"y\", -subNodeRadiusY)\n          .append(\"xhtml:div\")\n          .classed(\"label\", true)\n          .style(\"line-height\", (2 * subNodeRadiusY) + 'px')\n          .style(\"font-size\", selSubFontSize + \"px\")\n          .html(e => '<span>' + e.name + '</span>')\n\n        selKeyWords.on('click', e => {\n          // Set selection on all ring2 keyword nodes\n          selKeyWords.selectAll('ellipse')\n            .classed('selected', f => f.id === e.id)\n\n          // Signal selection to parent\n          props.onClick(d.id, d.name, e.id, e.name)\n        })\n\n        // Signal selection to parent\n        props.onClick(d.id, d.name, null)\n      })\n        .on(\"mouseover\", function (d) {\n          setTooltipTitle(d.name)\n          setTooltipBody(d.votesCount + \" votes dont \" + d.votesCountOk + \" favorables\")\n\n          d3.select(tooltipRef.current)\n            .attr(\"transform\", \"translate(\" + (d3.event.clientX+10)+ \",\" + (d3.event.clientY+10) + \")\")\n            .transition()\n            .attr(\"opacity\", 1)\n            .duration(200)\n        })\n        .on(\"mouseout\", function (d) {\n\n          d3.select(tooltipRef.current)\n            .transition()\n            .attr(\"opacity\", 0)\n            .duration(200)\n        })\n    })\n\n  return <g className=\"network-graph\">\n    <g ref={chartRef}>\n    </g>\n    <g ref={tooltipRef}>\n    </g>\n  </g>\n\n  //  <Tooltip title={tooltipTitle} body={tooltipBody}></Tooltip>\n}\n\nNetworkGraph.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  data: PropTypes.object\n}\n\nexport default NetworkGraph","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Scale = (props) => {\n\n  const num_circles = 4\n  const paddingH = 5, paddingV = 5;\n  const width = 8 * props.radius + 5 * paddingH\n  const height = 2 * props.radius + 2 * paddingV\n  \n  const circlesCfg = []\n  for(var i = 0; i < num_circles; i++){\n    var r = props.radius / Math.sqrt(num_circles - i)\n    circlesCfg[i] = {\n        radius: r, \n        centerX: (1 + i) * paddingH + (1 + 2 * i) * props.radius, \n        centerY: (height / 2), id: props.id + '_' + i, // height - paddingV - r, \n        filled: props.quantiles[i] < props.score\n    }\n  }\n  \n  const circles = circlesCfg.map(d => <circle r={d.radius} cx={d.centerX} cy={d.centerY} key={d.id}\n    stroke={props.color} fill={(d.filled)?props.color:\"transparent\"}>\n  </circle>)\n\n  return <svg width={width} height={height}>\n    <g>\n      {circles}\n    </g>\n  </svg>\n}\n\nScale.propTypes = {\n  radius: PropTypes.number,\n  color: PropTypes.string\n}\n\nexport default Scale","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Scale from './Scale'\n\n\n// Contribution item\nconst ContributionItem = (props) => {\n\n  const bodyRef = React.useRef()\n  const [expanded, setExpanded] = React.useState('')\n  const [command, setCommand] = React.useState('+')\n  const [showExpand, setShowExpand] = React.useState(false)\n\n  function toggleExpand() {\n    if (!expanded) {\n      setExpanded('expanded')\n      setCommand('-')\n    }\n    else {\n      setExpanded('')\n      setCommand('+')\n    }\n  }\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      const body = bodyRef.current\n      const heightDiff = body.scrollHeight - body.clientHeight\n      //console.log(\"contrib : \" + heightDiff + ', ' + body.scrollHeight + ', ' + body.clientHeight)\n      if (heightDiff < 15) {\n        setExpanded('expanded')\n      }\n      else {\n        setShowExpand(true)\n      }\n    }, 10)\n  }, [bodyRef])\n\n  const dynStyle = {\n    color: props.color,\n    borderColor: props.color\n  }\n\n  return <li key={props.id} className=\"contribution-list-item\">\n    <h1 className=\"contribution-title\">{props.contrib.contribution_versions_title}</h1>\n    <div className=\"contribution-body\" >\n      <div className={\"text \" + expanded} ref={bodyRef}>{props.contrib.contribution_versions_bodyText}</div>\n      {expanded === '' && <div className='mask'></div>}\n    </div>\n    <div className=\"bottom\">\n      <div className=\"buttons\">{showExpand && <button onClick={toggleExpand}>{command}</button>}</div>\n      <div className=\"scale\"><Scale radius={8} color={props.color} score={props.contrib.contributions_votesCountOk} quantiles={props.quantiles}></Scale></div>\n      <div className=\"vote-count\"  style={dynStyle}>{props.contrib.contributions_votesCount} votes dont {props.contrib.contributions_votesCountOk} favorables</div>\n    </div>\n  </li>\n}\n\n// Contribution list\nconst ContributionList = (props) => {\n\n  const contributionListRef = React.useRef(null)\n\n  function getTopicScaleColor(id) {\n    return props.colorPalette[id % props.colorPalette.length]\n  }\n\n  var contributionSummary = null\n  if (props.contributions !== undefined) {\n    contributionSummary = props.contributions\n      .map((c, i) => <ContributionItem key={props.id + '_' + i} id={props.id + '_' + i} contrib={c} \n        color={getTopicScaleColor(c.topic_id)} quantiles={props.quantiles}></ContributionItem>)\n  }\n\n  var title = ''\n  if (props.title) {\n    title += props.title.topic\n    if (!!props.title.keyword) {\n      title += ' > ' + props.title.keyword\n    }\n  }\n\n  React.useEffect(() => {\n    contributionListRef.current.scrollTo(0, 0)\n  }, [contributionSummary])\n\n  return <div ref={contributionListRef} className=\"contribution-list\">\n    {props.title && <h1 className='contribution-list-title'>{title}</h1>}\n    <ul className=\"contribution-list-list\">\n      {contributionSummary}\n    </ul>\n  </div>\n}\n\nContributionList.propTypes = {\n  title: PropTypes.object,\n  color: PropTypes.string,\n  contributions: PropTypes.array\n}\n\nexport default ContributionList","import './App.css';\nimport graphData from './data/le-vrai-debat.json'\nimport Chart from './components/Chart'\nimport NetworkGraph from './components/NetworkGraph'\nimport ContributionList from './components/ContributionList'\n\nimport React from 'react';\nimport { createBrowserHistory } from 'history';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  // Topic color palettes for node shape\n  // From https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/\n  // Column 3\n  const colorPalette = ['#E6B0AA', '#D7BDE2', '#A9CCE3', \n                        '#A3E4D7', '#FAD7A0', '#F5B7B1', \n                        '#D2B4DE', '#A9DFBF', '#F9E79F']\n  // Topic color palettes for texts and scale\n  // From https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/\n  // Column 5 or 6\n  const colorPaletteScale = ['#CD6155', '#9B59B6', '#2980B9', \n                            '#1ABC9C', '#F39C12', '#E74C3C',\n                            '#8E44AD',  '#27AE60', '#F1C40F']\n\n  // Contribution \"quantiles\" = repartition by importance\n  const quantiles = [500, 1000, 2500, 4000]\n\n  const [loaded, setLoaded] = React.useState(false)\n  const [filterTitle, setFilterTitle] = React.useState({topic: null, keyword: null})\n  const [selectedContributions, setSelectedContributions] = React.useState([])\n  const [selectionId, setSelectionId] = React.useState(\"root_unknown\")\n\n  // Get the contributions related to the topic (& keyword) or the whole (id=\"root\")\n  function getTopicContributions(topic_id, keyword_id) {\n    if (keyword_id === undefined || keyword_id === null) {\n      const filePath = './data/topic_' + topic_id + '_main_contributions.json'\n      axios.get(filePath)\n        .then((result) => {\n          setSelectedContributions(result.data)\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    }\n    else {\n      const filePath = './data/topic_' + topic_id + '_keyword_' + keyword_id + '_main_contributions.json'\n      axios.get(filePath)\n        .then((result) => {\n          setSelectedContributions(result.data)\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    }\n  }\n\n  // Update the view when a topic (and a keyword) are selected\n  function selectTopic(topic_id, topic_title, keyword_id, keyword) {\n    console.log(\"Topic clicked: topic='\" + topic_title + \"', keyword=\" + keyword)\n\n    setFilterTitle({topic: topic_title, keyword: keyword})\n    getTopicContributions(topic_id, keyword_id)\n    setSelectionId('' + topic_id + '_' + ((keyword_id !== null)?keyword_id:'unknown'))\n  }\n\n  // Select root by default\n  React.useEffect(() => {\n    if(!loaded){\n      selectTopic('root', \"Le Vrai Débat\", null)\n      setLoaded(true)\n    }\n  }, [loaded])\n\n  // Viewport sizing dimensions but not to set hard dimensions on the graph\n  const width = 700, height = 700;\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-wrap\">\n        <div className=\"chart-wrap\">\n          <Chart chartId='first' width={width} height={height} zoomtool={false}>\n            <NetworkGraph width={width} height={height} data={graphData}\n              onClick={selectTopic} colors={colorPalette}></NetworkGraph>\n          </Chart>\n        </div>\n        <div className=\"contributions-wrap\">\n          <ContributionList title={filterTitle} contributions={selectedContributions} id={selectionId} \n            colorPalette={colorPaletteScale} quantiles={quantiles}></ContributionList>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Locate the final installation within a subdirectory\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n}); \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}